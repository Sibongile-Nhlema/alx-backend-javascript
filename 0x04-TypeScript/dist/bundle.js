!function(e){var t={};function r(n){if(t[n])return t[n].exports;var o=t[n]={i:n,l:!1,exports:{}};return e[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)r.d(n,o,function(t){return e[t]}.bind(null,o));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=3)}([function(e,t){var r,n,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});!function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.getRequirements=function(){return"Here is the list of requirements for Cpp"},t.prototype.getAvailableTeacher=function(){return this.teacher&&this.teacher.experienceTeachingC>0?"Available Teacher: "+this.teacher.firstName:"No available teacher"},t}(Subject);e.Cpp=t}(n||(n={}))},function(e,t){var r,n,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});!function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.getRequirements=function(){return"Here is the list of requirements for Java"},t.prototype.getAvailableTeacher=function(){return this.teacher&&this.teacher.experienceTeachingJava>0?"Available Teacher: "+this.teacher.firstName:"No available teacher"},t}(Subject);e.Java=t}(n||(n={}))},function(e,t){var r,n,o=this&&this.__extends||(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});!function(e){var t=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return o(t,e),t.prototype.getRequirements=function(){return"Here is the list of requirements for React"},t.prototype.getAvailableTeacher=function(){return this.teacher&&this.teacher.experienceTeachingReact>0?"Available Teacher: "+this.teacher.firstName:"No available teacher"},t}(Subject);e.React=t}(n||(n={}))},function(e,t,r){"use strict";r.r(t);var n=r(0),o=r(1),i=r(2),c={firstName:"Sibongile",lastName:"Nhlema",experienceTeachingC:10};console.log("C++"),n.cpp.setTeacher(c),console.log(n.cpp.getRequirements()),console.log(n.cpp.getAvailableTeacher()),console.log("Java"),o.java.setTeacher(c),console.log(o.java.getRequirements()),console.log(o.java.getAvailableTeacher()),console.log("React"),i.react.setTeacher(c),console.log(i.react.getRequirements()),console.log(i.react.getAvailableTeacher())}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,